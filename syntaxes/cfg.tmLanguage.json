{
  "$schema":
    "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "TF2 cfg",
  "scopeName": "source.cfg",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#commands"
    },
    {
      "include": "#numeric-literal"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#command-lists"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#punctuation-semicolon"
    }
  ],
  "repository": {
    "punctuation-semicolon": {
      "patterns": [
        {
          "name": "punctuation.separator.comma.js",
          "match": ";"
        }
      ]
    },
    "command-lists": {
      "name": "meta.type.function.js",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.double.cfg"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "string.quoted.double.cfg"
        }
      },
      "patterns": [
        {
          "name": "string.quoted.double.cfg",
          "match": ";"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#numeric-literal"
        },
        {
          "include": "#variables"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.readwrite.js",
          "match": "([\\+|-]?[_$[:alpha:]][_$[:alnum:]]*)"
        }
      ]
    },
    "numeric-literal": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "(-?\\d(?:.\\d)?)"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.js",
          "begin": "(//)",
          "end": "(?=^)"
        }
      ]
    },
    "commands": {
      "patterns": [
        {
          "include": "#unknown"
        },
        {
          "include": "#buttons"
        },
        {
          "include": "#actions"
        },
        {
          "include": "#settings"
        }
      ]
    },
    "buttons": {
      "patterns": [
        {
          "name": "support.class",
          "match": "(?<=bind\\s)\\d"
        },
        {
          "name": "support.class",
          "match": "(?<=bind\\s\")\\d"
        },
        {
          "name": "support.class",
          "match":
            "(?i)\\b([A-Z]|MOUSE\\d?|MWHEELUP|MWHEELDOWN|KP_\\w+|LEFTARROW|UPARROW|RIGHTARROW|DOWNARROW|SPACE|SHIFT|ALT|CTRL|TAB|INS|END|ESCAPE|SEMICOLON|HOME|END|F\\d{1,2}|PGUP|PGDN|PAUSE)\\b"
        },
        {
          "begin": "([\"\\s])(\\/|`|\\'|\\[|\\]|\\.|\\-|,|\\\\)([\"\\s])",
          "beginCaptures": {
            "2": {
              "name": "support.class"
            },
            "1": {
              "name": "string.quoted.double.cfg"
            },
            "3": {
              "name": "string.quoted.double.cfg"
            }
          },
          "end": ""
        }
      ]
    },
    "actions": {
      "patterns": [
        {
          "name": "keyword.other.cfg",
          "match":
            "(?i)([\\+|-]attack\\d?\\b|[\\+|-]jump\\b|[\\+|-]duck|\\b[\\+|-]forward|\\b[\\+|-]back|\\b[\\+|-]moveleft\\b|[\\+|-]moveright|\\b[\\+|-]moveup|\\b[\\+|-]movedown|\\b[\\+|-]reload|\\b[\\+|-]inspect|\\b[\\+|-]use_action_slot_item\\b|[\\+|-]voicerecord|\\b[\\+|-]taunt|\\b[\\+|-]lookup|\\b[\\+|-]lookdown|\\b[\\+|-]showscores|\\b[\\+|-]strafe|\\b[\\+|-]klook\\b|[\\+|-]showroundinfo)"
        },
        {
          "name": "keyword.other.cfg",
          "match":
            "(?i)\\b(say|say_team|say_party|lastinv|impulse|build|destroy|eureka_teleport|disguise|load_itempreset|voicemenu|voice_menu_\\d|join_class|vote|changeclass|changeteam|open_charinfo_\\w+|show_quest_log|disguiseteam|cancelselect|pause|quit|toggleconsole|screenshot|save_replay|askconnect_accept|abuse_report_queue|name|lastdisguise|dropitem|centerview|showmapinfo|inspect|invnext|invprev|wait|taunt_by_name|slot\\d{1,2})\\b"
        }
      ]
    },
    "settings": {
      "patterns": [
        {
          "name": "keyword.control.cfg",
          "match":
            "(?i)\\b(exec|alias|bind|bindtoggle|toggle|unbind|unbindall|volume|crosshair|sensitivity|rate|map|deathmatch|tracer_extra|in_usekeyboardsampletime|joystick|fast_fogvolume|incrementvar|joy_\\w+|fov_\\w+|viewmodel\\w+|m_\\w+|r_\\w+|net_\\w+|cl_\\w+|tf_\\w+|sv_\\w+|con_\\w+|hud_\\w+|sixense_\\w+|windows_\\w+|snd_\\w+|mat_\\w+|mp_\\w+|flex_\\w+|lod_\\w+|rope_\\w+|glow_\\w+|glow_\\w+|func_\\w+|violence_\\w+|dsp_\\w+|props_\\w+|ragdoll_\\w+|ai_\\w+|g_\\w+|cam_\\w+|sb_\\w+|mod_\\w+|filesystem_\\w+|replay_\\w+|vr_\\w+|pyro_\\w+|nb_\\w+|ds_\\w+|host_\\w+|full)\\b"
        }
      ]
    },
    "unknown": {
      "patterns": [
        {
          "name": "invalid.deprecated",
          "match": "\\b(show_matchmaking|saveme)\\b"
        },
        {
          "name": "invalid.deprecated",
          "match": "([\\+|-]mlook|[\\+|-]alt[1|2])"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.cfg",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.cfg",
          "match": "\\\\."
        }
      ]
    }
  }
}
